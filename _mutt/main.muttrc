# Attachment handling
alternative_order text/plain text
auto_view text/html

source $HOME/.mutt/.mutt-colors/mutt-colors-solarized-light-16.muttrc
# macro generic \cl "<enter-command> source $HOME/.mutt/.mutt-colors/mutt-colors-solarized-dark-16.muttrc<Enter>"

# Some settings borrowed from http://www.spinnaker.de/mutt/muttrc

unset confirmappend	# prompt for confirm when appending message to ex. mbox
set delete_untag	# untag messages when marking them for deletion
set delete=yes		# ask for confirmation when deleting messages?
set display_filter=$HOME/Scripts/createalias.sh # filters new messages through a shell script that automatically generates a mutt alias for new senders
set editor="/Applications/MacVim.app/Contents/MacOS/vim -c start"	# start editor in insert mode
set fast_reply		# do not ask for to, subject,... when replying.
set forward_decode=yes
set forward_edit=ask-yes	# automatically start editor when forwarding.
set forward_format="Fwd: %s" 	# subject to use when forwarding
set include=yes		# quote message, when replying
unset markers		# put a '+' at the beginning of wrapped lines.	
unset mark_old		# mark new articles as old, when leaving mbox
set mime_forward=no	# forward all attachments as a single attachment?
set pager_index_lines=6	# add small message index at top of pager (5)
set pager_stop		# Don't jump to next message at end of message.
set print_command="muttprint -P letter -p TO_FILE:$HOME/tmp/mutt_attach/muttprint.ps && ps2pdf $HOME/tmp/mutt_attach/muttprint.ps $HOME/tmp/mutt_attach/muttprint.pdf && open $HOME/tmp/mutt_attach/muttprint.pdf"
set print=yes		# Don't confirm print
set query_command = "contacts -Sf '%eTOKEN%n' '%s' | sed -e 's/TOKEN/\t/g'"
set quit=yes		# don't ask before quitting.
unset reply_self	# if unset, a reply to yourself implies reply to other
set shell=/bin/bash
set signature=$HOME/.mutt/signature.txt		# set signature file
set sig_dashes=no	# no dashes between message text and signature
set sig_on_top		# puts signature above quoted or forwarded text
set smart_wrap		# wrap long lines at word boundary.
set text_flowed=yes # send format-flowed; vim must be set to fo+=w
set tilde			# Internal Pager: ~~~~ at end of message?
unset wait_key		# don't wait for keystroke to return from shell

# Macros

macro attach I <tag-prefix><save-entry><kill-line>$HOME/Inbox/ "Save attachments to Inbox"
macro index,pager,attach \ca <change-folder><kill-line>=Archived<enter> "Change to Archived mailbox"
macro index,pager,attach \cd <change-folder><kill-line>=Duncan<enter> "Change to Duncan mailbox"
macro index,pager,attach \cs <change-folder><kill-line>=Sent<tab><enter> "Change to Sent Messages"
macro index,pager,attach \ci <change-folder><kill-line>imaps://wcm1@imap.mail.rice.edu:993/INBOX<enter> "Change to inbox"
macro index <Down> <PageDown> "Advance a page in index"
macro index <Up> <PageUp> "Reverse a page in index"

# macro compose B "\
# :set content_type='multipart/alternative; boundary=aaLc9KT9j5DEsRQtRaroU6vdbZdHE3cN'\
# <pipe-message> pandoc --template=multipart.text -t markdown -o $HOME/Desktop/multipartmessage<enter>\
# <pipe-message> pandoc --template=multipart.html --standalone -t html >> $HOME/Desktop/multipartmessage<enter>"

# Settings from distribution Muttrc file

# Display the fields in this order
hdr_order from to cc subject date

# imitate the old search-body function
macro index \eb "<search>~b " "search in message bodies"

# simulate the old url menu
macro index,pager,attach,compose \cb "\
<enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<Enter>\
<pipe-message> urlview<Enter>\
<enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<Enter>" \
"call urlview to extract URLs out of a message"

# Show documentation when pressing F1
macro generic,pager <F1> "<shell-escape> less /opt/local/share/doc/mutt/manual.txt<Enter>" "show Mutt documentation"

# Use mime.types to look up handlers for application/octet-stream. Can
# be undone with unmime_lookup.
mime_lookup application/octet-stream

##
## *** DEFAULT SETTINGS FOR THE ATTACHMENTS PATCH ***
##

##
## Please see the manual (section "attachments")  for detailed
## documentation of the "attachments" command.
##
## Removing a pattern from a list removes that pattern literally. It
## does not remove any type matching the pattern.
##
##  attachments   +A */.*
##  attachments   +A image/jpeg
##  unattachments +A */.*
##
## This leaves "attached" image/jpeg files on the allowed attachments
## list. It does not remove all items, as you might expect, because the
## second */.* is not a matching expression at this time.
##
## Remember: "unattachments" only undoes what "attachments" has done!
## It does not trigger any matching on actual messages.

## Qualify any MIME part with an "attachment" disposition, EXCEPT for
## text/x-vcard and application/pgp parts. (PGP parts are already known
## to mutt, and can be searched for with ~g, ~G, and ~k.)
##
## I've added x-pkcs7 to this, since it functions (for S/MIME)
## analogously to PGP signature attachments. S/MIME isn't supported
## in a stock mutt build, but we can still treat it specially here.
##
attachments   +A */.*
attachments   -A text/x-vcard application/pgp.*
attachments   -A application/x-pkcs7-.*

## Discount all MIME parts with an "inline" disposition, unless they're
## text/plain. (Why inline a text/plain part unless it's external to the
## message flow?)
##
## attachments   +I text/plain
## attachments   +I text/html
  
## These two lines make Mutt qualify MIME containers.  (So, for example,
## a message/rfc822 forward will count as an attachment.)  The first
## line is unnecessary if you already have "attach-allow */.*", of
## course.  These are off by default!  The MIME elements contained
## within a message/* or multipart/* are still examined, even if the
## containers themselves don't qualify.
##
#attachments  +A message/.* multipart/.*
#attachments  +I message/.* multipart/.*

## You probably don't really care to know about deleted attachments.
attachments   -A message/external-body
attachments   -I message/external-body
